set encoding=utf8
using modex Location-modex.xml
using groups Location
using modex Person-modex.xml
using groups Person
using modex Organization-modex.xml
using groups Organization
set defaultAction=>CreateSpecificEntity()

use title.lst,function_title.lst
use admin_title.lst
use ../Location/streetKey.lst

#====================== Lieux

# adresses
# Manchester Road
# On ne garde pas l'entité Location
<Location>::@streetKey:ODO:
=>AppendEntityFeature(trigger,"name")
=>AddEntityFeature(right.1,"kind")
=>NormalizeEntity()
=<ClearEntityFeatures()

# Churchill street
#  On ne garde pas l'entité Personne
<Person.PERSON>::@streetKey:ODO:
=>AddEntityFeature(trigger,"kind")
=>AddEntityFeature(right.2,"name:string")
=>NormalizeEntity()
=<ClearEntityFeatures()

# Victory Street
@streetKey:($NC|$NP|t_capital_1st){1-3}::ODO:
=>SetEntityFeature(trigger,"kind")
=>AppendEntityFeature(right,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()
#loc.odo

#====================== Personnes

# Governor of Oklahoma
#  On garde l'entité Location et on produit 1 entité imbriquée
# governor::of Oklahoma:PERSON:
@adminTitle::of <Location>:PERSON:
=>AddEntityFeature(trigger,"title")
=>AddEntityFeatureAsEntity(right.2,"Location")
=>NormalizeEntity()
=<ClearEntityFeatures()

@Family=(brother,sister,wife,spouse,husband,father,mother,grandfather,grandmother,son,daughter,nephew,niece,cousin,uncle,aunt)
# daughter of Barack Obama
@Family:: of <Person.PERSON>:PERSON:
=>AddEntityFeature(trigger,"family")
=>AddEntityFeatureAsEntity(right.2,"Person")
=>NormalizeEntity()
=<ClearEntityFeatures()

# test relation family avec marque du posessif '
# Barack Obama's daughter
@Family:<Person.PERSON>::PERSON:
+isAlphaPossessive(left,"possessive")
=>AddEntityFeature(trigger,"family")
=>AddEntityFeatureAsEntity(left,"Person")
=>NormalizeEntity()
=<ClearEntityFeatures()

# Hack, to add a component "name" to Organisation
<Organization.ORGANIZATION>:::ORGANIZATION:
=>AddEntityFeature(trigger,"name")
=>NormalizeEntity()
=<ClearEntityFeatures()
