set encoding=utf8
using modex Organization-modex.xml
using modex Location-modex.xml
using groups Organization
using groups Location
set defaultAction=>CreateSpecificEntity()

# .com companies
com:$NP .::ORGANIZATION:
=>CreateSpecificEntity()

# list of organizations common to all languages
include ../../common/companies.rules

# a list of known organizations
include organization.rules
include organizationkey.lst

# newspapers and television
include newspapersAndMedia.rules

# organization names from Wikidata
include wd_organization.rules

use wd_organization.lst
@WikidataOrganization:::ORGANIZATION:

use ../Location/cities.lst,../Location/states.lst,../Location/countriesAndRegions.lst

# location based organization
@locationOrg=(
University,
International University,
College,
Campus,
School,
Supreme Court,
Circuit Court,
Tribunal,
Prison,
Police Department
)

@conjunctions=(
de,
del,
of,
the,
and,
\&)

@orgPrefix=(National,International,United,State)

use organizationkey.lst

[@organizationKey]:[(The|the)]::NOT_ORGANIZATION:
@organizationKey:(t_capital_1st|t_capital|t_capital_small|\&){1-5}:[(.)]:ORGANIZATION:
@organizationKey:(t_capital_1st|t_capital){1-3} @conjunctions{0-2} (t_capital_1st|t_capital){0-3}:[(.)]:ORGANIZATION:
@organizationKey:(t_capital_1st|t_capital|t_capital_small|\&){1-5}::ORGANIZATION:
@organizationKey:(t_capital_1st|t_capital){1-3} @conjunctions{0-2} (t_capital_1st|t_capital){0-3}::ORGANIZATION:

@newsAgency=(
agency,
)

[@newsAgency]:[(The|the)]::NOT_ORGANIZATION:
[@newsAgency]:(t_capital_1st|t_capital|t_capital_small|\&){1-5} [news]:[(.)?]:ORGANIZATION:
[@newsAgency]:(t_capital_1st|t_capital){1-3} @conjunctions{0-2} (t_capital_1st|t_capital){0-3} [news]:[(.)?]:ORGANIZATION:

@orgKeyToHide=(
party,
)

[@orgKeyToHide]:[(The|the)]::NOT_ORGANIZATION:
[@orgKeyToHide]:[(The|the)] (t_capital_1st|t_capital|t_capital_small|\&){1-5}:[(.)?]:ORGANIZATION:
[@orgKeyToHide]:[(The|the)] (t_capital_1st|t_capital){1-3} @conjunctions{0-2} (t_capital_1st|t_capital){0-3}:[(.)?]:ORGANIZATION:
[@orgKeyToHide]:            (t_capital_1st|t_capital|t_capital_small|\&){1-5}:[(.)?]:ORGANIZATION:
[@orgKeyToHide]:            (t_capital_1st|t_capital){1-3} @conjunctions{0-2} (t_capital_1st|t_capital){0-3}:[(.)?]:ORGANIZATION:

t_capital::\( t_capital_1st t_capital_1st{0-2} @conjunctions @conjunctions{0-1} t_capital_1st t_capital_1st{0-2} \):ORGANIZATION:
# Probably there is a bug in handling X{1-n} expressions: it works on sequences of zero length but it shouldn't

# [GC 20130906] commented out because this rule matches wrong things and remove tokens...
#t_capital_1st::[\(] t_capital_1st{1-3} @conjunctions{1-2} t_capital_1st{1-3} [\)]:ORGANIZATION:


t_capital_1st::t_capital_1st{1-3} [\(] <Location.LOCATION>] [\)]:NOT_ORGANIZATION:
[<Location.LOCATION>]::[\(] [t_capital_1st{1-3}] [\)]:ORGANIZATION:
[The]::t_capital_1st{1-3} [\(] [t_capital] [\)]:ORGANIZATION:
t_capital_1st::t_capital_1st{1-3} ['] t_capital_1st? [\(] [t_capital] [\)]:ORGANIZATION:
t_capital_1st::t_capital_1st{1-3} [\(] [t_capital] [\)]:ORGANIZATION:
t_capital_1st::t_capital_1st{1-3} @conjunctions{1-2} t_capital_1st{1-2} [\(] [t_capital] [\)]:ORGANIZATION:
[<Organization.ORGANIZATION>]::[\(] t_capital [\)]:ORGANIZATION:
t_capital::[\(] [t_capital_1st{1-3}] [\)]:ORGANIZATION:
[<Organization.ORGANIZATION>]::[\(] t_capital_1st{1-3} [\)]:ORGANIZATION:
t_capital_1st:[\(] [<Organization.ORGANIZATION>] [\)]:t_capital_1st{1-3}:ORGANIZATION:
t_capital_1st:[(The|the)]:t_capital_1st{0-2} [said]:ORGANIZATION:
@orgPrefix:[(The|the)]:t_capital_1st{1-2}:ORGANIZATION:
# ORGANIZATION:::ORGANIZATION:

University:(State)?:of <LOCATION> School of (t_capital_1st|t_capital|t_capital_small):ORGANIZATION:
University:(State)?:of <LOCATION>:ORGANIZATION:

@City::(@locationOrg):ORGANIZATION:
@locationOrg:@orgPrefix?:of? (@City|@State):ORGANIZATION:
@State::@orgPrefix? state? @orgPrefix? (@locationOrg):ORGANIZATION:
@locationOrg:@orgPrefix?::ORGANIZATION:

use organizationType.lst

@organizationType:@orgPrefix?:(of|de) (t_capital_1st|t_capital|t_capital_small|\&){1-5}:ORGANIZATION:

university:@orgPrefix?:of (@City|@State):ORGANIZATION:
#university::of (@City|@State) (@City|@State)?:ORGANIZATION:
@organizationType:@orgPrefix? <Location.LOCATION>::ORGANIZATION:
@organizationType:@orgPrefix?:(of|de)? <Location.LOCATION>:ORGANIZATION:
@organizationType:@orgPrefix?:(of|de)? (t_capital|t_capital_1st){1-3}:ORGANIZATION:
#@organizationType:@orgPrefix?:(t_capital|t_capital_1st){1-2}:ORGANIZATION:

@organizationType:[(The|the)] @orgPrefix? t_capital_1st{1-2}::ORGANIZATION:
@organizationType:[(The|the)] <LOCATION> <LOCATION>::ORGANIZATION:
@organizationType:            @orgPrefix? t_capital_1st{1-2}::ORGANIZATION:
@organizationType:            <LOCATION> <LOCATION>::ORGANIZATION:


UN:::ORGANIZATION:
un:::ORGANIZATION:

#------------------------------
# a list of known organizations
use newspaperKey.lst,organization.lst,../../common/organizationCommon.lst
use AutomobileManu.lst
# use companies.lst


# @companies:::ORGANIZATION:
@Autos:::ORGANIZATION:

# abbreviated newspaper names
@newspaperPrincipalKey:::ORGANIZATION:

@organization:::ORGANIZATION:
@organizationCommon:::ORGANIZATION:

use wd_organization.lst
@WikidataOrganization:::ORGANIZATION:
